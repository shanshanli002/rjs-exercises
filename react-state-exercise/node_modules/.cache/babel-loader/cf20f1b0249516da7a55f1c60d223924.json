{"ast":null,"code":"var _jsxFileName = \"/Users/shanli/Downloads/react-events-state-demo/videodemo/events-state/02_react_events_intro/src/NumberGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './NumberGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genRandom = () => {\n  return Math.floor(Math.random() * 10) + 1;\n};\nconst NumberGame = props => {\n  _s();\n  const [guess, setGuess] = useState(genRandom());\n  const [target, setTarget] = useState(genRandom);\n  const winner = guess === target;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Target Num: \", target, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: winner ? \"NumberGame-winner\" : \"NumberGame-loser\",\n      children: [\"Your Guess: \", guess, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), winner ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setGuess(genRandom()),\n      children: \"Generate Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(NumberGame, \"vpfHNTKnrNvCqkKU+vbuqhQouuA=\");\n_c = NumberGame;\nexport default NumberGame;\nvar _c;\n$RefreshReg$(_c, \"NumberGame\");","map":{"version":3,"names":["React","useState","genRandom","Math","floor","random","NumberGame","props","guess","setGuess","target","setTarget","winner"],"sources":["/Users/shanli/Downloads/react-events-state-demo/videodemo/events-state/02_react_events_intro/src/NumberGame.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './NumberGame.css'\nconst genRandom = () => {\n    return Math.floor(Math.random() * 10) + 1;\n}\n\nconst NumberGame = (props) => {\n    const [guess, setGuess] = useState(genRandom());\n    const [target, setTarget] = useState(genRandom);\n    const winner = guess === target;\n  return (\n    <div>\n      <h1>Target Num: {target} </h1>\n      <h1 className={winner ? \"NumberGame-winner\" : \"NumberGame-loser\"}>\n        Your Guess: {guess}{\" \"}\n      </h1>\n      {winner ? null : (\n        <button onClick={() => setGuess(genRandom())}>Generate Number</button>\n      )}\n    </div>\n  );\n};\n\nexport default NumberGame;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AAAA;AACzB,MAAMC,SAAS,GAAG,MAAM;EACpB,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;AAC7C,CAAC;AAED,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACC,SAAS,EAAE,CAAC;EAC/C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAACC,SAAS,CAAC;EAC/C,MAAMU,MAAM,GAAGJ,KAAK,KAAKE,MAAM;EACjC,oBACE;IAAA,wBACE;MAAA,2BAAiBA,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eAC9B;MAAI,SAAS,EAAEE,MAAM,GAAG,mBAAmB,GAAG,kBAAmB;MAAA,2BAClDJ,KAAK,EAAE,GAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACpB,EACJI,MAAM,GAAG,IAAI,gBACZ;MAAQ,OAAO,EAAE,MAAMH,QAAQ,CAACP,SAAS,EAAE,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9C;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GAfII,UAAU;AAAA,KAAVA,UAAU;AAiBhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}